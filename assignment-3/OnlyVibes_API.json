"{\n  \"openapi\": \"3.0.0\",\n  \"info\": {\n    \"title\": \"OnlyVibes API\",\n    \"version\": \"1.0.0\",\n    \"description\": \"OpenAPI specification for Account and Preference resources of OnlyVibes\"\n  },\n  \"paths\": {\n    \"/accounts/{userId}\": {\n      \"get\": {\n        \"summary\": \"Get account by userId\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Account retrieved\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"integer\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePictureUrl\": {\n                      \"type\": \"string\"\n                    },\n                    \"bio\": {\n                      \"type\": \"string\"\n                    },\n                    \"preferences\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isVerified\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"likedEventsIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"followedAccountsIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"role\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"user\",\n                        \"venue\",\n                        \"admin\"\n                      ]\n                    },\n                    \"venueDetails\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"location\": {\n                          \"type\": \"string\"\n                        },\n                        \"taxIdentificationNumHashed\": {\n                          \"type\": \"integer\"\n                        },\n                        \"businessRegistrationNumHashed\": {\n                          \"type\": \"integer\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"code\": 401,\n                  \"message\": \"Unauthorized\"\n                }\n              }\n            }\n          },\n          \"403\": {\n            \"description\": \"Forbidden\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"code\": 403,\n                  \"message\": \"Forbidden\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Not Found\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"code\": 404,\n                  \"message\": \"Account not found\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update account by userId\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"integer\"\n                  },\n                  \"email\": {\n                    \"type\": \"string\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"profilePictureUrl\": {\n                    \"type\": \"string\"\n                  },\n                  \"bio\": {\n                    \"type\": \"string\"\n                  },\n                  \"preferences\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"isVerified\": {\n                    \"type\": \"boolean\"\n                  },\n                  \"likedEventsIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"followedAccountsIds\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"integer\"\n                    }\n                  },\n                  \"role\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"user\",\n                      \"venue\",\n                      \"admin\"\n                    ]\n                  },\n                  \"venueDetails\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"location\": {\n                        \"type\": \"string\"\n                      },\n                      \"taxIdentificationNumHashed\": {\n                        \"type\": \"integer\"\n                      },\n                      \"businessRegistrationNumHashed\": {\n                        \"type\": \"integer\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Account updated\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"integer\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"profilePictureUrl\": {\n                      \"type\": \"string\"\n                    },\n                    \"bio\": {\n                      \"type\": \"string\"\n                    },\n                    \"preferences\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"string\"\n                      }\n                    },\n                    \"isVerified\": {\n                      \"type\": \"boolean\"\n                    },\n                    \"likedEventsIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"followedAccountsIds\": {\n                      \"type\": \"array\",\n                      \"items\": {\n                        \"type\": \"integer\"\n                      }\n                    },\n                    \"role\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"user\",\n                        \"venue\",\n                        \"admin\"\n                      ]\n                    },\n                    \"venueDetails\": {\n                      \"type\": \"object\",\n                      \"properties\": {\n                        \"location\": {\n                          \"type\": \"string\"\n                        },\n                        \"taxIdentificationNumHashed\": {\n                          \"type\": \"integer\"\n                        },\n                        \"businessRegistrationNumHashed\": {\n                          \"type\": \"integer\"\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Bad request\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                },\n                \"example\": {\n                  \"code\": 400,\n                  \"message\": \"Bad request\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete account by userId\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Account deleted\"\n          }\n        }\n      }\n    },\n    \"/accounts/{userId}/verification-request\": {\n      \"post\": {\n        \"summary\": \"Submit a verification request\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"fullName\",\n                  \"email\",\n                  \"governmentIdFile\",\n                  \"phoneNumber\"\n                ],\n                \"properties\": {\n                  \"fullName\": {\n                    \"type\": \"string\",\n                    \"description\": \"Full legal name of the user\"\n                  },\n                  \"email\": {\n                    \"type\": \"string\",\n                    \"format\": \"email\"\n                  },\n                  \"phoneNumber\": {\n                    \"type\": \"string\",\n                    \"description\": \"Validated phone number\"\n                  },\n                  \"governmentIdFile\": {\n                    \"type\": \"string\",\n                    \"format\": \"binary\",\n                    \"description\": \"Upload of a valid government-issued ID\"\n                  },\n                  \"additionalDocuments\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\",\n                      \"format\": \"binary\"\n                    },\n                    \"description\": \"Optional supporting files (e.g., selfie, proof of address)\"\n                  },\n                  \"notes\": {\n                    \"type\": \"string\",\n                    \"description\": \"Optional message or explanation for the request\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Verification request submitted\"\n          },\n          \"400\": {\n            \"description\": \"Invalid or incomplete data\"\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a verification request\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"multipart/form-data\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/VerificationRequestUpdate\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Verification request updated\"\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"Get current verification request and its status\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Verification request retrieved\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"fullName\": {\n                      \"type\": \"string\"\n                    },\n                    \"email\": {\n                      \"type\": \"string\",\n                      \"format\": \"email\"\n                    },\n                    \"phoneNumber\": {\n                      \"type\": \"string\"\n                    },\n                    \"status\": {\n                      \"type\": \"string\",\n                      \"enum\": [\n                        \"pending\",\n                        \"approved\",\n                        \"rejected\"\n                      ]\n                    },\n                    \"submittedAt\": {\n                      \"type\": \"string\",\n                      \"format\": \"date-time\"\n                    },\n                    \"adminComment\": {\n                      \"type\": \"string\",\n                      \"description\": \"Optional admin feedback or rejection reason\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"No verification request found\"\n          }\n        }\n      }\n    },\n    \"/accounts/{userId}/preferences\": {\n      \"get\": {\n        \"summary\": \"Get user preferences\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Preferences retrieved\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Preferences\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update user preferences\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"categories\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Preferences updated\"\n          },\n          \"400\": {\n            \"description\": \"Bad request\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete user preferences\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Preferences deleted\"\n          }\n        }\n      }\n    },\n    \"/accounts\": {\n      \"post\": {\n        \"summary\": \"Create a new user account\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"email\",\n                  \"name\",\n                  \"password\",\n                  \"role\"\n                ],\n                \"properties\": {\n                  \"email\": {\n                    \"type\": \"string\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"password\": {\n                    \"type\": \"string\"\n                  },\n                  \"profilePictureUrl\": {\n                    \"type\": \"string\"\n                  },\n                  \"bio\": {\n                    \"type\": \"string\"\n                  },\n                  \"preferences\": {\n                    \"type\": \"array\",\n                    \"items\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"role\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"user\",\n                      \"venue\"\n                    ]\n                  },\n                  \"venueDetails\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"location\": {\n                        \"type\": \"string\"\n                      },\n                      \"taxIdentificationNumHashed\": {\n                        \"type\": \"integer\"\n                      },\n                      \"businessRegistrationNumHashed\": {\n                        \"type\": \"integer\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Account created successfully\"\n          },\n          \"400\": {\n            \"description\": \"Invalid input data\"\n          }\n        }\n      }\n    },\n    \"/accounts/{userId}/notifications\": {\n      \"get\": {\n        \"summary\": \"Get all notifications for a user\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of notifications\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"integer\"\n                      },\n                      \"message\": {\n                        \"type\": \"string\"\n                      },\n                      \"createdAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a new notification for a user\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"message\"\n                ],\n                \"properties\": {\n                  \"message\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Notification created\"\n          }\n        }\n      }\n    },\n    \"/accounts/{userId}/notifications/{notificationId}\": {\n      \"put\": {\n        \"summary\": \"Update a notification message\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"notificationId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"message\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Notification updated\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a notification\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"notificationId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Notification deleted\"\n          }\n        }\n      }\n    },\n    \"/accounts/{userId}/reminders\": {\n      \"get\": {\n        \"summary\": \"Get all reminders for a user\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of reminders including notification types (e.g., 1 hour before or on cancel).\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"id\": {\n                        \"type\": \"integer\"\n                      },\n                      \"eventId\": {\n                        \"type\": \"integer\"\n                      },\n                      \"remindAt\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                      },\n                      \"isActive\": {\n                        \"type\": \"boolean\"\n                      },\n                      \"type\": {\n                        \"type\": \"string\",\n                        \"enum\": [\n                          \"1_hour_before\",\n                          \"on_cancel\"\n                        ]\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a new reminder for an event\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"required\": [\n                  \"eventId\",\n                  \"remindAt\",\n                  \"type\"\n                ],\n                \"properties\": {\n                  \"eventId\": {\n                    \"type\": \"integer\"\n                  },\n                  \"remindAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                  },\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"1_hour_before\",\n                      \"on_cancel\"\n                    ],\n                    \"description\": \"Type of reminder: 1 hour before or on cancel\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Reminder created for specific type (e.g., 1 hour before start or on cancel)\"\n          }\n        }\n      }\n    },\n    \"/accounts/{userId}/reminders/{reminderId}\": {\n      \"put\": {\n        \"summary\": \"Update a reminder\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"reminderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"remindAt\": {\n                    \"type\": \"string\",\n                    \"format\": \"date-time\"\n                  },\n                  \"isActive\": {\n                    \"type\": \"boolean\"\n                  }\n                }\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Reminder updated\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a reminder\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"reminderId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Reminder deleted\"\n          }\n        }\n      }\n    },\n    \"/accounts/{userId}/recommendations\": {\n      \"get\": {\n        \"summary\": \"Get personalized event recommendations for a user\",\n        \"description\": \"Returns a list of recommended events based on user preferences, interactions, and trending data.\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of recommended events\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                      \"eventId\": {\n                        \"type\": \"integer\"\n                      },\n                      \"title\": {\n                        \"type\": \"string\"\n                      },\n                      \"location\": {\n                        \"type\": \"string\"\n                      },\n                      \"datetime\": {\n                        \"type\": \"string\",\n                        \"format\": \"date-time\"\n                      },\n                      \"category\": {\n                        \"type\": \"string\"\n                      },\n                      \"likecounter\": {\n                        \"type\": \"number\",\n                        \"format\": \"float\",\n                        \"description\": \"Recommendation confidence score (0 to 1)\"\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/accounts/{userId}/follow\": {\n      \"post\": {\n        \"summary\": \"Follow a user or venue\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"targetId\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"required\": [\n                  \"targetId\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully followed\"\n          }\n        }\n      }\n    },\n    \"/accounts/{userId}/follow/{targetId}\": {\n      \"delete\": {\n        \"summary\": \"Unfollow a user or venue\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"targetId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successfully unfollowed\"\n          }\n        }\n      }\n    },\n    \"/accounts/{userId}/followers\": {\n      \"get\": {\n        \"summary\": \"Get list of followers\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of followers\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/accounts/{userId}/following\": {\n      \"get\": {\n        \"summary\": \"Get list of followed users/venues\",\n        \"parameters\": [\n          {\n            \"name\": \"userId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of following\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"type\": \"string\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/events/{eventId}/like\": {\n      \"post\": {\n        \"summary\": \"Like an event\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Event liked successfully\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Unlike an event\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Like removed successfully\"\n          }\n        }\n      }\n    },\n    \"/events/{eventId}/likes\": {\n      \"get\": {\n        \"summary\": \"Get number of likes for an event\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Number of likes\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"eventId\": {\n                      \"type\": \"integer\"\n                    },\n                    \"likesCount\": {\n                      \"type\": \"integer\"\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/categories\": {\n      \"get\": {\n        \"summary\": \"Get all categories\",\n        \"description\": \"Returns a list of available event categories.\",\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of categories\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Filter\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/categories/{categoryId}\": {\n      \"get\": {\n        \"summary\": \"Get category by ID\",\n        \"description\": \"Returns details of a specific event category.\",\n        \"parameters\": [\n          {\n            \"name\": \"categoryId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Category details\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Filter\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Category not found\"\n          }\n        }\n      }\n    },\n    \"/events\": {\n      \"get\": {\n        \"summary\": \"Get all events\",\n        \"description\": \"Returns a list of available events with optional filters.\",\n        \"parameters\": [\n          {\n            \"name\": \"category\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"location\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"fromDate\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date\"\n            }\n          },\n          {\n            \"name\": \"toDate\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\",\n              \"format\": \"date\"\n            }\n          },\n          {\n            \"name\": \"sort\",\n            \"in\": \"query\",\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of events\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Event\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      },\n      \"post\": {\n        \"summary\": \"Create a new event\",\n        \"description\": \"Allows verified users or venues to create a new event.\",\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EventCreate\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Event created successfully\"\n          }\n        }\n      }\n    },\n    \"/events/{eventId}\": {\n      \"get\": {\n        \"summary\": \"Get event by ID\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Event details\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Event\"\n                }\n              }\n            }\n          },\n          \"404\": {\n            \"description\": \"Event not found\"\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update an event\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/EventCreate\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Event updated successfully\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete an event\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"integer\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Event deleted successfully\"\n          }\n        }\n      }\n    },\n    \"/events/{eventId}/reviews\": {\n      \"post\": {\n        \"summary\": \"Create a review\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ReviewCreate\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"201\": {\n            \"description\": \"Review created\"\n          }\n        }\n      },\n      \"get\": {\n        \"summary\": \"Get all reviews for an event\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"List of reviews\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"array\",\n                  \"items\": {\n                    \"$ref\": \"#/components/schemas/Review\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/events/{eventId}/reviews/{reviewId}\": {\n      \"get\": {\n        \"summary\": \"Get a specific review\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"reviewId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Review object\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Review\"\n                }\n              }\n            }\n          }\n        }\n      },\n      \"put\": {\n        \"summary\": \"Update a review\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"reviewId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"requestBody\": {\n          \"required\": true,\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"$ref\": \"#/components/schemas/ReviewCreate\"\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Review updated\"\n          }\n        }\n      },\n      \"delete\": {\n        \"summary\": \"Delete a review\",\n        \"parameters\": [\n          {\n            \"name\": \"eventId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"reviewId\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ],\n        \"responses\": {\n          \"204\": {\n            \"description\": \"Review deleted\"\n          }\n        }\n      }\n    },\n    \"/search\": {\n      \"get\": {\n        \"summary\": \"Search available events or users\",\n        \"description\": \"Perform a full-text search over available events or available users.\\nReturns a paginated list of matching resources.\",\n        \"parameters\": [\n          {\n            \"name\": \"resource\",\n            \"in\": \"query\",\n            \"description\": \"Which resource type to search\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"enum\": [\n                \"events\",\n                \"accounts\"\n              ]\n            }\n          },\n          {\n            \"name\": \"q\",\n            \"in\": \"query\",\n            \"description\": \"Free-text search query\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          },\n          {\n            \"name\": \"page\",\n            \"in\": \"query\",\n            \"description\": \"Page number (1-based)\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"minimum\": 1,\n              \"default\": 1\n            }\n          },\n          {\n            \"name\": \"pageSize\",\n            \"in\": \"query\",\n            \"description\": \"Number of items per page\",\n            \"required\": false,\n            \"schema\": {\n              \"type\": \"integer\",\n              \"minimum\": 1,\n              \"maximum\": 100,\n              \"default\": 20\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"A page of search results\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/SearchResponse\"\n                }\n              }\n            }\n          },\n          \"400\": {\n            \"description\": \"Invalid request parameters\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized – invalid or missing credentials\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          },\n          \"500\": {\n            \"description\": \"Internal server error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/Error\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"SearchResponse\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"results\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"oneOf\": [\n                {\n                  \"$ref\": \"#/components/schemas/Event\"\n                },\n                {\n                  \"$ref\": \"#/components/schemas/Account\"\n                }\n              ]\n            }\n          },\n          \"pagination\": {\n            \"$ref\": \"#/components/schemas/Pagination\"\n          }\n        },\n        \"required\": [\n          \"results\",\n          \"pagination\"\n        ]\n      },\n      \"VerificationRequestUpdate\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"idType\": {\n            \"type\": \"string\",\n            \"description\": \"Type of government-issued ID (e.g., passport, driver's license)\"\n          },\n          \"idNumber\": {\n            \"type\": \"string\",\n            \"description\": \"Identification document number\"\n          },\n          \"idDocument\": {\n            \"type\": \"string\",\n            \"format\": \"binary\",\n            \"description\": \"Scanned copy or photo of the government-issued ID\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\",\n            \"description\": \"User's email address for confirmation\"\n          },\n          \"emailVerificationToken\": {\n            \"type\": \"string\",\n            \"description\": \"Token sent to the user's email to confirm ownership\"\n          },\n          \"phoneNumber\": {\n            \"type\": \"string\",\n            \"description\": \"User's phone number for validation\"\n          },\n          \"phoneVerificationCode\": {\n            \"type\": \"string\",\n            \"description\": \"Code sent to the user's phone to confirm ownership\"\n          },\n          \"authenticationMethod\": {\n            \"type\": \"string\",\n            \"description\": \"Identifier for any other authentication method (e.g., \\\"two_factor_app\\\", \\\"security_question\\\")\"\n          },\n          \"authenticationData\": {\n            \"type\": \"string\",\n            \"description\": \"Data required for the chosen authentication method (e.g., one-time password, security question answer)\"\n          }\n        },\n        \"required\": [\n          \"idType\",\n          \"idNumber\",\n          \"idDocument\",\n          \"email\",\n          \"emailVerificationToken\",\n          \"phoneNumber\",\n          \"phoneVerificationCode\"\n        ]\n      },\n      \"EventBase\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"startDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"endDate\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"location\": {\n            \"type\": \"string\"\n          },\n          \"availableSeats\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"title\",\n          \"startDate\",\n          \"endDate\"\n        ]\n      },\n      \"Pagination\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"page\": {\n            \"type\": \"integer\"\n          },\n          \"pageSize\": {\n            \"type\": \"integer\"\n          },\n          \"totalItems\": {\n            \"type\": \"integer\"\n          },\n          \"totalPages\": {\n            \"type\": \"integer\"\n          }\n        },\n        \"required\": [\n          \"page\",\n          \"pageSize\",\n          \"totalItems\",\n          \"totalPages\"\n        ]\n      },\n      \"Error\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"code\": {\n            \"type\": \"integer\"\n          },\n          \"message\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"code\",\n          \"message\"\n        ]\n      },\n      \"Event\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"eventId\": {\n            \"type\": \"integer\"\n          },\n          \"creatorId\": {\n            \"type\": \"integer\"\n          },\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"category\": {\n            \"type\": \"string\"\n          },\n          \"dateTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"location\": {\n            \"type\": \"string\"\n          },\n          \"imageUrl\": {\n            \"type\": \"string\",\n            \"format\": \"uri\"\n          },\n          \"isCancelled\": {\n            \"type\": \"boolean\"\n          }\n        },\n        \"required\": [\n          \"eventId\",\n          \"creatorId\",\n          \"title\",\n          \"category\",\n          \"dateTime\",\n          \"location\"\n        ]\n      },\n      \"Filter\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"filterId\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"type\": \"string\"\n          },\n          \"iconUrl\": {\n            \"type\": \"string\",\n            \"format\": \"uri\"\n          },\n          \"value\": {\n            \"type\": \"string\"\n          }\n        },\n        \"required\": [\n          \"filterId\",\n          \"type\",\n          \"value\"\n        ]\n      },\n      \"EventCreate\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"title\": {\n            \"type\": \"string\"\n          },\n          \"eventId\": {\n            \"type\": \"string\"\n          },\n          \"ownerId\": {\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"category\": {\n            \"type\": \"string\"\n          },\n          \"dateTime\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"location\": {\n            \"type\": \"string\"\n          },\n          \"imageUrl\": {\n            \"type\": \"string\",\n            \"format\": \"uri\"\n          }\n        },\n        \"required\": [\n          \"title\",\n          \"category\",\n          \"dateTime\",\n          \"location\"\n        ]\n      },\n      \"Review\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"reviewId\": {\n            \"type\": \"string\"\n          },\n          \"eventId\": {\n            \"type\": \"string\"\n          },\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"rating\": {\n            \"type\": \"integer\"\n          },\n          \"comment\": {\n            \"type\": \"string\"\n          },\n          \"mediaUrls\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"timestamp\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        }\n      },\n      \"ReviewCreate\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"rating\": {\n            \"type\": \"integer\"\n          },\n          \"comment\": {\n            \"type\": \"string\"\n          },\n          \"mediaUrls\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          }\n        },\n        \"required\": [\n          \"rating\"\n        ]\n      },\n      \"Preferences\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"userId\": {\n            \"type\": \"string\"\n          },\n          \"categories\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"locations\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"string\"\n            }\n          },\n          \"timeRange\": {\n            \"type\": \"string\"\n          }\n        }\n      },\n      \"Account\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"id\": {\n            \"type\": \"string\",\n            \"format\": \"uuid\"\n          },\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"format\": \"password\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"user\",\n              \"venue\",\n              \"admin\"\n            ]\n          },\n          \"createdAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          },\n          \"updatedAt\": {\n            \"type\": \"string\",\n            \"format\": \"date-time\"\n          }\n        },\n        \"required\": [\n          \"id\",\n          \"username\",\n          \"email\",\n          \"password\",\n          \"role\",\n          \"createdAt\",\n          \"updatedAt\"\n        ]\n      },\n      \"NewAccount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"format\": \"password\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"user\",\n              \"venue\"\n            ]\n          }\n        },\n        \"required\": [\n          \"username\",\n          \"email\",\n          \"password\",\n          \"role\"\n        ]\n      },\n      \"UpdateAccount\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"username\": {\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"type\": \"string\",\n            \"format\": \"email\"\n          },\n          \"password\": {\n            \"type\": \"string\",\n            \"format\": \"password\"\n          },\n          \"role\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"user\",\n              \"venue\",\n              \"admin\"\n            ]\n          }\n        }\n      }\n    }\n  }\n}"